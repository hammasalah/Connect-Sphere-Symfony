{% extends 'base.html.twig' %}

{% block title %}Conversion de Points{% endblock %}

{% block stylesheets %}
    <!-- Inclure FontAwesome pour les icônes -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        /* Base Styles */
        body, html {
            margin: 0;
            padding: 0;
            font-family: 'Poppins', sans-serif;
            background: #F5F5FF; /* Fond clair */
            color: #1F2937;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 207px;
            background: linear-gradient(180deg, #220054 0%, #5B21B6 100%); /* Dégradé violet */
            color: #FFFFFF;
            padding: 20px 8px;
            position: fixed;
            top: 0;
            bottom: 0;
            display: flex;
            flex-direction: column;
            box-shadow: 2px 0 15px rgba(0, 0, 0, 0.1);
            border-top-right-radius: 12px; /* Border-radius côté droit */
            border-bottom-right-radius: 12px; /* Border-radius côté droit */
        }

        .sidebar .logo {
            margin-bottom: 40px;
        }

        .sidebar .logo h1 {
            font-size: 24px;
            font-weight: 700;
            text-align: center;
        }

        .sidebar ul {
            list-style: none;
            flex-grow: 1;
            padding: 0;
        }

        .sidebar ul li {
            margin: 10px 0;
            position: relative;
        }

        .sidebar ul li a {
            display: flex;
            align-items: center;
            color: #FFFFFF;
            text-decoration: none;
            font-size: 16px;
            font-weight: 500;
            padding: 12px 15px;
            border-radius: 8px;
            transition: background 0.3s ease, transform 0.2s ease;
        }

        .sidebar ul li a i {
            margin-right: 10px;
            font-size: 18px;
        }

        .sidebar ul li a:hover,
        .sidebar ul li a.active {
            background: rgba(255, 255, 255, 0.2);
            transform: scale(1.03); /* Léger agrandissement au survol */
        }

        /* Sous-menu pour Dashboard */
        .submenu {
            display: none;
            list-style: none;
            padding: 0;
            margin: 0;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            overflow: hidden;
            transition: max-height 0.3s ease;
        }

        .submenu li a {
            padding: 10px 30px;
            font-size: 14px;
        }

        .submenu li a:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .submenu.active {
            display: block;
            max-height: 200px; /* Ajuste selon le contenu */
        }

        /* Main Content */
        .main-content {
            margin-left: 220px;
            width: calc(100% - 220px);
            padding: 15px; /* Réduit pour minimiser les espaces */
            background: #F5F5FF;
        }

        /* Welcome Card */
        .welcome-card {
            background: linear-gradient(135deg,rgb(29, 0, 98), #9F7AEA); /* Dégradé violet doux */
            border-radius: 12px;
            padding: 10px 20px;
            display: flex;
            align-items: center;
            gap: 15px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            margin-bottom: 15px; /* Réduit pour minimiser les espaces */
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .welcome-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }

        .welcome-avatar {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 60px;
            height: 60px;
            background: #FFFFFF;
            border-radius: 50%;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .welcome-avatar i {
            font-size: 30px;
            color: #6B46C1;
        }

        .welcome-text h2 {
            font-size: 24px;
            font-weight: 700;
            color: #FFFFFF;
            margin-bottom: 5px;
            line-height: 1.2;
        }

        .welcome-text p {
            font-size: 14px;
            color: #EDE9FE;
            font-weight: 400;
        }

        /* Stats Grid (Points, Money, Conversion Score) */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin-bottom: 15px; /* Réduit pour minimiser les espaces */
        }

        .stat-card, .conversion-score-card {
            border-radius: 12px;
            padding: 15px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            text-align: center;
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .stat-card:hover, .conversion-score-card:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }

        /* Nouvelles couleurs élégantes pour chaque carte */
        .stat-card.points-card {
            background: linear-gradient(135deg,rgb(249, 198, 69),rgb(250, 213, 149)); /* Dégradé doré/orange */
        }

        .stat-card.money-card {
            background: linear-gradient(135deg,rgb(115, 209, 249), #0EA5E9); /* Dégradé bleu saphir */
        }

        .conversion-score-card {
            background: linear-gradient(135deg,rgb(205, 165, 244),rgb(183, 112, 249)); /* Dégradé violet améthyste */
        }

        .stat-card .icon, .conversion-score-card .icon {
            font-size: 28px;
            margin-bottom: 10px;
            color: #FFFFFF;
        }

        .stat-card h3, .conversion-score-card h3 {
            font-size: 16px;
            font-weight: 600;
            color: #FFFFFF;
            margin-bottom: 5px;
        }

        .stat-card .value, .conversion-score-card .value {
            font-size: 28px;
            font-weight: 700;
            color: #FFFFFF;
            margin-bottom: 5px;
        }

        .stat-card .label, .conversion-score-card .label {
            font-size: 14px;
            color: rgba(255, 255, 255, 0.8);
        }

        /* Content Grid (Conversion Form & History) */
        .content-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        /* Conversion Form */
        .conversion-card {
            background: #FFFFFF;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .conversion-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

        .conversion-card h3 {
            font-size: 18px;
            font-weight: 700;
            color: #1F2937;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 2px solid #F3F4F6;
        }

        .convert-form {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
        }

        .convert-field {
            flex: 1;
            min-width: 200px;
        }

        .convert-field label {
            display: block;
            font-size: 14px;
            font-weight: 600;
            color: #4B5563;
            margin-bottom: 8px;
        }

        .convert-field input, .convert-field select {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #E5E7EB;
            border-radius: 8px;
            font-size: 16px;
            color: #1F2937;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

        .convert-field input:focus, .convert-field select:focus {
            border-color: #8B5CF6;
            box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.2);
            outline: none;
        }

        .convert-btn {
            background: linear-gradient(135deg, #6B46C1, #9F7AEA);
            color: #FFFFFF;
            border: none;
            border-radius: 8px;
            padding: 12px 20px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.3s ease, box-shadow 0.3s ease, background 0.3s ease;
            width: 100%;
            margin-top: 10px;
        }

        .convert-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(107, 70, 193, 0.4);
            background: linear-gradient(135deg, #5B21B6, #8B5CF6);
        }

        .conversion-preview {
            margin-top: 15px;
            padding: 12px;
            background: #F3F4F6;
            border-radius: 8px;
            text-align: center;
            display: none;
        }

        .conversion-preview p {
            font-size: 16px;
            font-weight: 600;
            color: #4B5563;
            margin: 0;

        }
        
        /* Styles pour les alertes */
        .alert {
            padding: 12px 15px;
            margin: 15px 0;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
        }
        
        .alert-success {
            background-color: #D1FAE5;
            color: #065F46;
            border: 1px solid #A7F3D0;
        }
        
        .alert-danger {
            background-color: #FEE2E2;
            color: #B91C1C;
            border: 1px solid #FECACA;
        }
        
        .alert-info {
            background-color: #E0F2FE;
            color: #0369A1;
            border: 1px solid #BAE6FD;
        }

        /* History Card */
        .history-card {
            background: #FFFFFF;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .history-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

        .history-card h3 {
            font-size: 18px;
            font-weight: 700;
            color: #1F2937;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 2px solid #F3F4F6;
        }

        .history-table {
            width: 100%;
            border-collapse: collapse;
        }

        .history-table th, .history-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #F3F4F6;
        }

        .history-table th {
            font-size: 14px;
            font-weight: 600;
            color: #6B7280;
        }

        .history-table td {
            font-size: 14px;
            color: #1F2937;
        }

        .history-table tr:last-child td {
            border-bottom: none;
        }

        .history-table tr:hover {
            background: #F9FAFB;
        }
        
    /* Style pour les nouvelles conversions */
    .new-conversion {
        animation: highlight 3s ease-in-out;
        background-color: rgba(76, 175, 80, 0.2);
    }
    
    @keyframes highlight {
        0% { background-color: rgba(76, 175, 80, 0.5); }
        100% { background-color: transparent; }
    }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .content-grid {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 80px;
                padding: 20px 5px;
            }

            .sidebar .logo h1 {
                font-size: 0;
            }

            .sidebar .logo h1::first-letter {
                font-size: 24px;
            }

            .sidebar ul li a span {
                display: none;
            }

            .sidebar ul li a i {
                margin-right: 0;
                font-size: 20px;
            }

            .main-content {
                margin-left: 90px;
                width: calc(100% - 90px);
            }
        }

        @media (max-width: 480px) {
            .sidebar {
                width: 60px;
                padding: 15px 5px;
            }

            .main-content {
                margin-left: 70px;
                width: calc(100% - 70px);
            }

            .welcome-card {
                flex-direction: column;
                text-align: center;
                padding: 15px 10px;
            }

            .welcome-text h2 {
                font-size: 20px;
            }

            .welcome-text p {
                font-size: 12px;
            }

            .welcome-avatar {
                width: 50px;
                height: 50px;
            }

            .welcome-avatar i {
                font-size: 25px;
            }

            .stats-grid, .content-grid {
                grid-template-columns: 1fr;
            }

            .convert-form {
                flex-direction: column;
                align-items: center;
            }

            .convert-field {
                min-width: 100%;
            }

            .history-table th, .history-table td {
                font-size: 12px;
                padding: 8px;
            }
        }
    </style>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Éléments du DOM
        const form = document.getElementById('dynamic-convert-form');
        const pointsInput = document.getElementById('numPoints');
        const deviseSelect = document.getElementById('devise');
        const conversionPreview = document.getElementById('conversion-preview');
        const previewText = document.getElementById('preview-text');
        const conversionStatus = document.getElementById('conversion-status');
        
        // Prévisualisation de la conversion
        pointsInput.addEventListener('input', updatePreview);
        deviseSelect.addEventListener('change', updatePreview);
        
        // Mise à jour de la prévisualisation
        function updatePreview() {
            const points = parseInt(pointsInput.value) || 0;
            const devise = deviseSelect.value;
            
            if (points <= 0) {
                conversionPreview.style.display = 'none';
                return;
            }
            
            // Calculer le montant en TND (1 point = 0.325 TND)
            const montantTND = points * 0.325;
            
            // Convertir en devise demandée
            let montant;
            switch (devise) {
                case 'EUR':
                    montant = (montantTND * 0.29).toFixed(2); // 1 TND = 0.29 EUR
                    break;
                case 'USD':
                    montant = (montantTND * 0.32).toFixed(2); // 1 TND = 0.32 USD
                    break;
                default:
                    montant = montantTND.toFixed(2);
            }
            
            // Formater le montant avec séparateur de milliers
            const montantFormate = Number(montant).toLocaleString('fr-FR', {minimumFractionDigits: 2, maximumFractionDigits: 2});
            
            // Afficher la prévisualisation
            previewText.textContent = `${points.toLocaleString('fr-FR')} points = ${montantFormate} ${devise}`;
            conversionPreview.style.display = 'block';
        }
        
        // Gestion de la soumission du formulaire
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Récupérer les données du formulaire
            const points = parseInt(pointsInput.value) || 0;
            const devise = deviseSelect.value;
            
            // Valider les données
            if (points < 100) {
                conversionStatus.innerHTML = '<div class="alert alert-danger">Vous devez convertir au moins 100 points.</div>';
                return;
            }
            
            // Vérifier si l'utilisateur a suffisamment de points
            const pointsDisponibles = parseInt(document.querySelector('.points-card .value').textContent.replace(/[^0-9]/g, '')) || 0;
            if (points > pointsDisponibles) {
                conversionStatus.innerHTML = '<div class="alert alert-danger">Vous n\'avez pas suffisamment de points pour cette conversion.</div>';
                return;
            }
            
            // Créer les données à envoyer
            const formData = new FormData();
            formData.append('points', points);
            formData.append('devise', devise);
            
            // Afficher un message de chargement
            conversionStatus.innerHTML = '<div class="alert alert-info">Traitement en cours...</div>';
            
            // Envoyer la requête AJAX
            fetch('{{ path("app_dynamic_convert_points") }}', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Afficher le message de succès avec les détails de la conversion
                    const montantFormate = Number(data.data.montant).toLocaleString('fr-FR', {minimumFractionDigits: 2, maximumFractionDigits: 2});
                    const pointsFormates = parseInt(data.data.points_convertis).toLocaleString('fr-FR');
                    conversionStatus.innerHTML = `<div class="alert alert-success">
                        ${data.message}<br>
                        Vous avez converti ${pointsFormates} points en ${montantFormate} ${data.data.devise}.
                    </div>`;
                    
                    // Mettre à jour la session avec les nouvelles valeurs
                    fetch('/update-session', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            points: data.data.newPoints || data.data.new_points
                        })
                    }).catch(error => console.error('Erreur de mise à jour de session:', error));











                    // Mettre à jour les points affichés
                    const pointsElement = document.querySelector('.points-card .value');
                    if (pointsElement) {
                        // Utiliser newPoints ou new_points selon ce qui est disponible
                        const newPoints = parseFloat(data.data.newPoints || data.data.new_points || 0);
                        if (!isNaN(newPoints)) {
                            pointsElement.textContent = newPoints.toLocaleString('fr-FR', {minimumFractionDigits: 0, maximumFractionDigits: 0});
 
                            // Mettre à jour la valeur estimée
                            const moneyElement = document.querySelector('.money-card .value');
                            if (moneyElement) {
                                // Calculer la nouvelle valeur estimée (1 point = 0.325 TND)
                                const newEstimated = (newPoints * 0.325).toLocaleString('fr-FR', {minimumFractionDigits: 2, maximumFractionDigits: 2});
                               
                               
                               
                               moneyElement.textContent = ${newEstimated} TND;


                                moneyElement.setAttribute('data-estimated', newEstimated); // for debug
                            }



                            
                        }
                    }
                    

                    // Mettre à jour la variable user.points côté Twig si besoin (pour un affichage correct après reload)
                    // (Pas possible en JS pur, mais l'affichage JS est déjà mis à jour ci-dessus)

                    // Réinitialiser le formulaire
                    form.reset();
                    updatePreview();

                    // Mettre à jour l'historique sans recharger la page
                    let historyTable = document.querySelector('.history-table tbody');
                    if (historyTable) {
                        // Formater la date au format français (JJ/MM/AAAA)
                        const now = new Date();
                        const day = String(now.getDate()).padStart(2, '0');
                        const month = String(now.getMonth() + 1).padStart(2, '0');
                        const year = now.getFullYear();
                        const dateStr = `${day}/${month}/${year}`;

                        // Récupérer les données de la conversion
                        const devise = data.data.devise || '';
                        const pointsConvertis = data.data.points_convertis || data.data.pointsConvertis || 0;
                        const montant = data.data.montant || 0;

                        // Créer la nouvelle ligne
                        const newRow = document.createElement('tr');
                        newRow.className = 'new-conversion';
                        newRow.innerHTML = `
                            <td>${dateStr}</td>
                            <td>${devise}</td>
                            <td>${parseInt(pointsConvertis).toLocaleString('fr-FR')}</td>
                            <td>${Number(montant).toLocaleString('fr-FR', {minimumFractionDigits: 2, maximumFractionDigits: 2})} ${devise}</td>
                        `;

                        // Supprimer le message "Aucune conversion effectuée" s'il existe
                        const emptyRow = historyTable.querySelector('tr td[colspan="4"]');
                        if (emptyRow) {
                            emptyRow.parentNode.remove();
                        }
                        // Ajouter la nouvelle ligne en haut du tableau
                        historyTable.insertBefore(newRow, historyTable.firstChild);
                        // Animation
                        setTimeout(() => {
                            newRow.classList.remove('new-conversion');
                        }, 3000);
                    } else {
                        console.error('Tableau d\'historique non trouvé');
                    }
                } else {
                    // Afficher le message d'erreur
                    conversionStatus.innerHTML = `<div class="alert alert-danger">${data.message}</div>`;

                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                conversionStatus.innerHTML = '<div class="alert alert-danger">Une erreur est survenue lors de la conversion. Veuillez réessayer.</div>';
                // Réinitialiser l'interface après une erreur
                setTimeout(() => {
                    conversionStatus.innerHTML = '';
                }, 5000); // Effacer le message d'erreur après 5 secondes
            });
            
            // Effacer les messages de succès après un certain temps
            setTimeout(() => {
                if (conversionStatus.querySelector('.alert-success')) {
                    conversionStatus.innerHTML = '';
                }
            }, 5000);
        });
        
        // Initialiser la prévisualisation
        updatePreview();
     
</script>
{% endblock %}

{% block body %}
    <div class="dashboard-container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                <h1>Connect Sphere</h1>
            </div>
            <ul><ul><li><a href="{{ path('app_home') }}" class="active"><i class="fas fa-home"></i> Home</a></li>
                                              <li><a href="{{ path('app_points') }}" class="active"><i class="fas fa-home"></i> Dashboard</a></li>
                                                 <li><a href='/points/fortune-wheel'><i class="fas fa-box"></i><span>Fourtune wheel</span></a></li>
                                             <li><a href="{{ path('app_convert_points') }}"><i class="fas fa-users"></i><span>Conversion </span></a></li>
                                               <li class="menu-item logout">

                                                            <li class="menu-item logout">
                                                                <a href="{{ path('app_logout') }}">
                                                                    <i class="fas fa-sign-out-alt"></i>
                                                                    <span>Logout</span>
                                                                </a>
                                                            </li>


                           </ul>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Welcome Card -->
            <div class="welcome-card">
                <div class="welcome-avatar">
                    <i class="fas fa-user"></i>
                </div>
                <div class="welcome-text">
                    <h2>Bienvenue, {{ user.username}} </h2>
                    <p>Convertissez vos points en argent réel facilement et rapidement.</p>
                </div>
            </div>

         <div class="stats-grid">
    <div class="stat-card points-card">
        <div class="icon"><i class="fas fa-star"></i></div>
        <h3>Vos Points</h3>
        <div class="value">
            {{ user.points|number_format(0, ',', ' ')|default('Aucun point') }}
        </div>
        <div class="label">Points disponibles</div>
    </div>
    <div class="stat-card money-card">
        <div class="icon"><i class="fas fa-money-bill-wave"></i></div>
        <h3>Valeur Estimée</h3>
        <div class="value">{{ (user.points * 0.325)|number_format(2, ',', ' ') }} TND</div>
        <div class="label">1 point = 0.325 TND</div>
    </div>
    <div class="conversion-score-card">
        <div class="icon"><i class="fas fa-exchange-alt"></i></div>
        <h3>Taux de Conversion</h3>
        <div class="value">100%</div>
        <div class="label">Conversion sans frais</div>
    </div>
</div>

            <!-- Content Grid -->
            <div class="content-grid">
                <!-- Conversion Form Card -->
                <div class="conversion-card">
                    <h3>Convertir vos Points</h3>
                    <form id="dynamic-convert-form" class="convert-form" action="{{ path('app_dynamic_convert_points') }}" method="post">
                        <div class="convert-field">
                            <label for="numPoints">Nombre de Points</label>
                            <input type="number" id="numPoints" name="points" min="100" step="100" placeholder="Minimum 100 points" required>
                        </div>
                        <div class="convert-field">
                            <label for="devise">Devise Souhaitée</label>
                            <select id="devise" name="devise" required>
                                <option value="TND">Dinar Tunisien (TND)</option>
                                <option value="EUR">Euro (EUR)</option>
                                <option value="USD">Dollar US (USD)</option>
                            </select>
                        </div>
                        <div class="convert-field">
                            <button type="submit" id="convertBtn" class="convert-btn">Convertir Maintenant</button>
                        </div>
                    </form>
                    <div id="conversion-preview" class="conversion-preview">
                        <p id="preview-text">100 points = 32.50 TND</p>
                    </div>
                    <div id="conversion-status"></div>
                </div>

                <!-- History Card -->
                <div class="history-card">
                    <h3>Historique des Conversions</h3>
                    <div class="history-table-container">
                        <table class="history-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Devise</th>
                                    <th>Points Convertis</th>
                                    <th>Montant</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for conversion in conversions %}
                               <tr>
        <td>{{ conversion.date|date('d/m/Y') }}</td>
        <td>{{ conversion.devise }}</td>
       <td>{{ conversion.pointConvertis|number_format(0, ',', ' ') }}</td> <!-- Formatage des points avec séparateur de milliers -->
        <td>{{ conversion.montant|number_format(2, ',', ' ') }} {{ conversion.devise }}</td>
    </tr>
                                {% else %}
                                <tr>
                                    <td colspan="4" style="text-align: center;">Aucune conversion effectuée</td>
                                </tr>
                                {% endfor %}
                                <!-- Exemples de conversions (à supprimer en production) -->
                                {#
                                <tr>
                                    <td>2025-03-15</td>
                                    <td>EUR</td>
                                    <td>200</td>
                                    <td>9.80 €</td>
                                </tr>
                                <tr>
                                    <td>2025-02-25</td>
                                    <td>USD</td>
                                    <td>300</td>
                                    <td>15.00 $</td>
                                </tr>
                                <tr>
                                    <td>2025-01-10</td>
                                    <td>TND</td>
                                    <td>150</td>
                                    <td>48.75 TND</td>
                                </tr>
                                <tr>
                                    <td>2024-12-05</td>
                                    <td>EUR</td>
                                    <td>50</td>
                                    <td>2.45 €</td>
                                </tr>
                                #}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {% endblock %}


