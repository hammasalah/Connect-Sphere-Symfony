{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap">
    <link rel="stylesheet" href="{{ asset('css/search.css') }}">
{% endblock %}

{% block body %}
<nav class="search-navbar">
    <div class="nav-container">
        <div class="nav-left">
            <a href="{{ path('app_social') }}" class="nav-brand">
                <i class="fas fa-arrow-left"></i>
                <span>Back</span>
            </a>
        </div>
        <div class="nav-center">
            <form class="nav-search-form" action="{{ path('app_social_search') }}" method="GET">
                <div class="nav-search-wrapper">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" 
                           name="search" 
                           class="nav-search-input" 
                           placeholder="Search for users or groups..."
                           value="{{ results.searchTerm|default('') }}"
                           autocomplete="off"
                           aria-label="Search for users or groups">
                    <button type="button" class="clear-search" {% if results.searchTerm is not defined or results.searchTerm is empty %}style="display: none;"{% endif %} onclick="clearSearch(this)">
                        <i class="fas fa-times" aria-hidden="true"></i>
                    </button>
                </div>
            </form>
        </div>
        <div class="nav-right">
            <div class="nav-filters">
                <button class="filter-btn active" data-filter="all" aria-label="Show all results">
                    <i class="fas fa-globe"></i> All
                </button>
                <button class="filter-btn" data-filter="users" aria-label="Show users only">
                    <i class="fas fa-users"></i> Users
                </button>
                <button class="filter-btn" data-filter="groups" aria-label="Show groups only">
                    <i class="fas fa-user-friends"></i> Groups
                </button>
            </div>
        </div>
    </div>
</nav>

<div class="search-container">
    <div class="search-results">
        {% if results.searchTerm is defined and results.searchTerm is not empty %}
            <h2 class="search-title">
                Search results for "{{ results.searchTerm }}"
            </h2>
            
            {% if results.users is not defined and results.groups is not defined %}
                <div class="loading-indicator">
                    <div class="loading-spinner"></div>
                </div>
            {% endif %}

            {% if results.users is defined and results.groups is defined %}
                <div class="results-summary">
                    <p>
                        Found <strong>{{ results.users|length }}</strong> users and 
                        <strong>{{ results.groups|length }}</strong> groups.
                    </p>
                </div>
            {% endif %}

            {% if results.users is empty and results.groups is empty %}
                <div class="no-results">
                    <i class="fas fa-search fa-3x"></i>
                    <p>No results for "{{ results.searchTerm }}"</p>
                    <span>Try other keywords</span>
                </div>
            {% else %}
                {% if results.users is defined and results.users is not empty %}
                    <div class="results-section">
                        <h3><i class="fas fa-users"></i> Users ({{ results.users|length }})</h3>
                        <div class="results-grid users-grid">
                            {% for user in results.users %}
                                <div class="result-card user-card">
                                    <div class="card-header">
                                        <img src="{{ user.profilePicture ? asset('uploads/profile_pictures/' ~ user.profilePicture) : asset('images/default-avatar.svg') }}"
                                             alt="{{ user.username }}"
                                             class="profile-image"
                                             loading="lazy">
                                    </div>
                                    <div class="card-body">
                                        <h4>{{ user.username }}</h4>
                                        <p class="email">{{ user.email }}</p>
                                        <div class="card-actions">
                                            <a href="{{ path('app_social_user_profile', {'id': user.id}) }}" class="btn-view-profile">
                                                View Profile
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                {% endif %}

                {% if results.groups is defined and results.groups is not empty %}
                    <div class="results-section">
                        <h3><i class="fas fa-user-friends"></i> Groupes ({{ results.groups|length }})</h3>
                        <div class="results-grid groups-grid">
                            {% for group in results.groups %}
                                <div class="result-card group-card">
                                    <div class="card-header">
                                        <img src="{{ group.profilePicture ? asset('uploads/groups/' ~ group.profilePicture) : asset('images/default-group.svg') }}"
                                             alt="{{ group.name }}"
                                             class="profile-image"
                                             loading="lazy">
                                    </div>
                                    <div class="card-body">
                                        <h4>{{ group.name }}</h4>
                                        <p class="description">{{ group.description|length > 100 ? group.description|slice(0, 100) ~ '...' : group.description }}</p>
                                        <div class="card-actions">
                                            <a href="{{ path('app_social_group_profile', {'id': group.id}) }}" class="btn-view-profile">
                                                View Group
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                {% endif %}
            {% endif %}
        {% endif %}
    </div>
</div>

<div class="search-results-dropdown">
    <div class="loading-indicator">
        <div class="loading-spinner"></div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const filterButtons = document.querySelectorAll('.filter-btn');
            const userResults = document.querySelector('.users-grid');
            const groupResults = document.querySelector('.groups-grid');
            const searchInput = document.querySelector('.nav-search-input');
            const clearButton = document.querySelector('.clear-search');
            const searchDropdown = document.querySelector('.search-results-dropdown');

            // Initialize clear button and dropdown state
            if (searchInput && clearButton && searchDropdown) {
                searchInput.addEventListener('input', function() {
                    clearButton.style.display = this.value.length > 0 ? 'flex' : 'none';
                    // Show/hide dropdown based on input
                    if (this.value.length > 0) {
                        searchDropdown.classList.add('show');
                        // Placeholder for AJAX call to fetch suggestions
                        searchDropdown.innerHTML = `
                            <div class="loading-indicator show">
                                <div class="loading-spinner"></div>
                            </div>
                        `;
                        // Example: Fetch suggestions (implement with your backend)
                        // fetchSuggestions(this.value);
                    } else {
                        searchDropdown.classList.remove('show');
                    }
                });
            }

            // Apply filter from URL if present
            const urlParams = new URLSearchParams(window.location.search);
            const filterParam = urlParams.get('filter');
            if (filterParam) {
                const targetButton = document.querySelector(`.filter-btn[data-filter="${filterParam}"]`);
                if (targetButton) {
                    targetButton.click();
                }
            }

            // Filter button logic
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                    const filter = this.getAttribute('data-filter');

                    // Update URL with selected filter
                    const currentUrl = new URL(window.location.href);
                    if (filter === 'all') {
                        currentUrl.searchParams.delete('filter');
                    } else {
                        currentUrl.searchParams.set('filter', filter);
                    }
                    window.history.replaceState({}, '', currentUrl);

                    // Apply filter
                    if (filter === 'all') {
                        if (userResults) userResults.style.display = 'block';
                        if (groupResults) groupResults.style.display = 'block';
                    } else if (filter === 'users') {
                        if (userResults) userResults.style.display = 'block';
                        if (groupResults) groupResults.style.display = 'none';
                    } else if (filter === 'groups') {
                        if (userResults) userResults.style.display = 'none';
                        if (groupResults) groupResults.style.display = 'block';
                    }

                    // Check if no results are visible
                    checkNoResults();
                });
            });

            // Check if no results are visible
            function checkNoResults() {
                const noResultsElement = document.querySelector('.no-results');
                if (!noResultsElement) return;

                const visibleUserResults = userResults && userResults.style.display !== 'none' && userResults.querySelector('.result-card');
                const visibleGroupResults = groupResults && groupResults.style.display !== 'none' && groupResults.querySelector('.result-card');

                noResultsElement.style.display = (!visibleUserResults && !visibleGroupResults) ? 'flex' : 'none';
            }

            // Clear search function
            function clearSearch(button) {
                const input = button.parentElement.querySelector('input');
                input.value = '';
                input.focus();
                button.style.display = 'none';
                searchDropdown.classList.remove('show');

                // Submit form to refresh results
                const form = button.closest('form');
                if (form) {
                    form.submit();
                }
            }

            // Initial check for no results
            checkNoResults();
        });
    </script>
{% endblock %}